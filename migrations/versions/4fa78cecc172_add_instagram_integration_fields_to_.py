"""Add Instagram integration fields to User model

Revision ID: 4fa78cecc172
Revises: 1c9b714e4aca
Create Date: 2025-03-14 12:14:25.085104

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4fa78cecc172'
down_revision = '1c9b714e4aca'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('instagram_token', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('instagram_user_id', sa.String(length=64), nullable=True))
    op.add_column('users', sa.Column('instagram_username', sa.String(length=64), nullable=True))
    op.add_column('users', sa.Column('instagram_connected_at', sa.DateTime(), nullable=True))
    
    # username カラムが存在しないため、参照を削除
    # op.alter_column('users', 'username',
    #            existing_type=sa.VARCHAR(length=50),
    #            type_=sa.String(length=64),
    #            nullable=True)
    
    # 存在するカラムのみ修正
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)
    op.alter_column('users', 'password_hash',
               existing_type=sa.TEXT(),
               type_=sa.String(length=128),
               nullable=True)
    
    # profile_pic_url や spots_heading が存在しない場合は削除
    # op.alter_column('users', 'profile_pic_url',
    #            existing_type=sa.TEXT(),
    #            type_=sa.String(length=255),
    #            existing_nullable=True)
    # op.alter_column('users', 'spots_heading',
    #            existing_type=sa.VARCHAR(length=50),
    #            type_=sa.String(length=100),
    #            existing_nullable=True)
    
    # ユニーク制約の削除（存在する場合のみ）
    try:
        op.drop_constraint('users_email_key', 'users', type_='unique')
    except:
        pass  # 既に削除されているか存在しない場合

    # username関連の操作を削除
    # op.drop_constraint('users_username_key', 'users', type_='unique')
    
    # インデックス作成（email のみ実行）
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    
    # username インデックス作成を削除
    # op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    
    try:
        op.create_unique_constraint('users_email_key', 'users', ['email'])
    except:
        pass  # 既に存在するか作成できない場合
    
    # username に関する操作を削除
    # op.create_unique_constraint('users_username_key', 'users', ['username'])
    
    # profile_pic_url や spots_heading が存在しない場合は削除
    # op.alter_column('users', 'spots_heading',
    #            existing_type=sa.String(length=100),
    #            type_=sa.VARCHAR(length=50),
    #            existing_nullable=True)
    # op.alter_column('users', 'profile_pic_url',
    #            existing_type=sa.String(length=255),
    #            type_=sa.TEXT(),
    #            existing_nullable=True)
    
    # 存在するカラムのみ元に戻す
    op.alter_column('users', 'password_hash',
               existing_type=sa.String(length=128),
               type_=sa.TEXT(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=120),
               nullable=False)
    
    # username 関連の操作を削除
    # op.alter_column('users', 'username',
    #            existing_type=sa.String(length=64),
    #            type_=sa.VARCHAR(length=50),
    #            nullable=False)
    
    op.drop_column('users', 'instagram_connected_at')
    op.drop_column('users', 'instagram_username')
    op.drop_column('users', 'instagram_user_id')
    op.drop_column('users', 'instagram_token')
    # ### end Alembic commands ###
